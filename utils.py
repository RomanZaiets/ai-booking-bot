import openai
from dateutil import parser
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# üîç AI: –ü–∞—Ä—Å–∏–Ω–≥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async def parse_request_with_gpt(user_input, openai_module):
    prompt = f"""
    –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –≤–∏—Ç—è–≥–Ω–∏:
    - –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ (–º–∞–Ω—ñ–∫—é—Ä –∞–±–æ –ø–µ–¥–∏–∫—é—Ä)
    - –î–∞—Ç–∞ (—É —Ñ–æ—Ä–º–∞—Ç—ñ –†–†–†–†-–ú–ú-–î–î)
    - –ß–∞—Å (—É —Ñ–æ—Ä–º–∞—Ç—ñ –ì–ì:–•–•)
    –Ø–∫—â–æ —â–æ—Å—å –Ω–µ–∑—Ä–æ–∑—É–º—ñ–ª–æ ‚Äî –ø–æ–≤–µ—Ä—Ç–∞–π –ø–æ—Ä–æ–∂–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è.

    –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: "{user_input}"

    –í—ñ–¥–ø–æ–≤—ñ–¥—å —É —Ñ–æ—Ä–º–∞—Ç—ñ JSON:
    {{
        "procedure": "...",
        "date": "...",
        "time": "..."
    }}
    """

    response = await openai_module.ChatCompletion.acreate(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}]
    )
    content = response.choices[0].message.content

    try:
        return eval(content)
    except:
        return {"procedure": "", "date": "", "time": ""}

# üìÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Å–ª–æ—Ç –≤—ñ–ª—å–Ω–∏–π
def is_slot_available(date, time, sheet_id, credentials_file):
    scope = ['https://spreadsheets.google.com/feeds',
             'https://www.googleapis.com/auth/drive']
    creds = ServiceAccountCredentials.from_json_keyfile_name(credentials_file, scope)
    client = gspread.authorize(creds)

    sheet = client.open_by_key(sheet_id).sheet1
    records = sheet.get_all_records()

    for record in records:
        if str(record.get("date")) == str(date) and str(record.get("time")) == str(time):
            return False
    return True

# üíæ –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏ –≤ Google Sheet
def save_to_sheet(message, user_input, parsed, sheet_id, credentials_file):
    scope = ['https://spreadsheets.google.com/feeds',
             'https://www.googleapis.com/auth/drive']
    creds = ServiceAccountCredentials.from_json_keyfile_name(credentials_file, scope)
    client = gspread.authorize(creds)

    sheet = client.open_by_key(sheet_id).sheet1

    sheet.append_row([
        str(message.from_user.full_name),
        str(message.chat.id),
        user_input,
        parsed.get("procedure"),
        parsed.get("date"),
        parsed.get("time")
    ])