import logging
from aiogram import Bot, Dispatcher, types
import openai
import os
from utils import parse_request_with_gpt, is_slot_available, save_to_sheet
from scheduler import schedule_reminder

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
ADMIN_CHAT_ID = os.getenv("ADMIN_CHAT_ID")
GOOGLE_SHEET_ID = os.getenv("GOOGLE_SHEET_ID")
SERVICE_ACCOUNT_FILE = "credentials.json"

logging.basicConfig(level=logging.INFO)
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher(bot)
openai.api_key = OPENAI_API_KEY

@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –ù–∞–ø–∏—à—ñ—Ç—å, –Ω–∞ —è–∫—É –ø—Ä–æ—Ü–µ–¥—É—Ä—É –±–∞–∂–∞—î—Ç–µ –∑–∞–ø–∏—Å–∞—Ç–∏—Å—å —ñ –∫–æ–ª–∏ üíÖ")

@dp.message_handler(commands=['cancel'])
async def cancel_handler(message: types.Message):
    await message.answer("–ù–∞–ø–∏—à—ñ—Ç—å, —â–æ —Å–∞–º–µ –±–∞–∂–∞—î—Ç–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏ (–ø—Ä–æ—Ü–µ–¥—É—Ä—É, –¥–∞—Ç—É, —á–∞—Å).")

@dp.message_handler()
async def handle_message(message: types.Message):
    user_input = message.text
    await message.answer("üîç –ê–Ω–∞–ª—ñ–∑—É—é –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")

    parsed = await parse_request_with_gpt(user_input, openai)
    await message.answer(f"üß† –Ø –∑—Ä–æ–∑—É–º—ñ–≤:\n{parsed}")

    proc, date, time = parsed.get("procedure"), parsed.get("date"), parsed.get("time")
    if not (proc and date and time):
        await message.answer("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Ç–æ—á–Ω–æ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—É, –¥–∞—Ç—É –∞–±–æ —á–∞—Å.")
        return

    available = is_slot_available(date, time, GOOGLE_SHEET_ID, SERVICE_ACCOUNT_FILE)
    if not available:
        await message.answer("‚ùå –¶–µ–π —Å–ª–æ—Ç —É–∂–µ –∑–∞–π–Ω—è—Ç–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à–∏–π —á–∞—Å.")
        return

    save_to_sheet(message, user_input, parsed, GOOGLE_SHEET_ID, SERVICE_ACCOUNT_FILE)
    await message.answer("‚úÖ –í–∞—Å –∑–∞–ø–∏—Å–∞–Ω–æ! –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.")

    schedule_reminder(bot, message.chat.id, date, time, proc)
    await bot.send_message(ADMIN_CHAT_ID, f"üì¨ –ù–æ–≤–∏–π –∑–∞–ø–∏—Å –≤—ñ–¥ {message.from_user.full_name}:\n{parsed}")

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
