from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.date import DateTrigger
from datetime import datetime, timedelta

scheduler = AsyncIOScheduler()
scheduler.start()

# üîî –°—Ç–≤–æ—Ä—é—î –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def schedule_reminder(bot, chat_id, date_str, time_str, procedure):
    try:
        appointment_time = datetime.strptime(f"{date_str} {time_str}", "%Y-%m-%d %H:%M")

        # –ó–∞ –¥–µ–Ω—å –¥–æ
        reminder_1_time = appointment_time - timedelta(days=1)
        if reminder_1_time > datetime.now():
            scheduler.add_job(
                send_reminder,
                trigger=DateTrigger(run_date=reminder_1_time),
                args=[bot, chat_id, procedure, date_str, time_str]
            )

        # –ó–∞ 2 –≥–æ–¥–∏–Ω–∏ –¥–æ
        reminder_2_time = appointment_time - timedelta(hours=2)
        if reminder_2_time > datetime.now():
            scheduler.add_job(
                send_reminder,
                trigger=DateTrigger(run_date=reminder_2_time),
                args=[bot, chat_id, procedure, date_str, time_str]
            )
    except Exception as e:
        print(f"‚õî Error in scheduling reminder: {e}")

# ‚úÖ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
async def send_reminder(bot, chat_id, procedure, date, time):
    text = f"‚è∞ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: –≤–∏ –∑–∞–ø–∏—Å–∞–Ω—ñ –Ω–∞ {procedure} {date} –æ {time}."
    try:
        await bot.send_message(chat_id, text)
    except Exception as e:
        print(f"‚ö†Ô∏è Failed to send reminder: {e}")